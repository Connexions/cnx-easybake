cnx-easybake DEBUG Passes: [u'counter(mine)', u'first', u'second']
cnx-easybake DEBUG Rule (11): :pass(counter(mine)) body::after 
cnx-easybake DEBUG     counter(mine): content string(onestring)
cnx-easybake DEBUG IdentToken as string: onestring
cnx-easybake WARNING onestring blank string
cnx-easybake DEBUG Recipe counter(mine) length: 4
cnx-easybake DEBUG Rule (1): body:pass("first") 
cnx-easybake DEBUG     first: string-set onestring "This is a first-pass string"
cnx-easybake DEBUG Rule (14): :pass(first) div[data-type="chapter"] section.practice-test 
cnx-easybake DEBUG     first: move-to eoc-practice-test
cnx-easybake DEBUG Rule (17): :pass(first) div[data-type="chapter"] section.key-equations 
cnx-easybake DEBUG     first: move-to eoc-key-equations
cnx-easybake DEBUG Rule (14): :pass(first) div[data-type="chapter"] section.practice-test 
cnx-easybake DEBUG     first: move-to eoc-practice-test
cnx-easybake DEBUG Rule (20): :pass(first) div[data-type="chapter"]::after 
cnx-easybake DEBUG     first: class eoc-practice-test
cnx-easybake DEBUG IdentToken as string: eoc-practice-test
cnx-easybake DEBUG     first: data-type composite-page
cnx-easybake DEBUG IdentToken as string: composite-page
cnx-easybake DEBUG     first: container div
cnx-easybake DEBUG     first: content pending(eoc-practice-test)
cnx-easybake DEBUG Rule (26): :pass(first) div[data-type="chapter"]::after 
cnx-easybake DEBUG     first: class eoc-key-equations
cnx-easybake DEBUG IdentToken as string: eoc-key-equations
cnx-easybake DEBUG     first: data-type composite-page
cnx-easybake DEBUG IdentToken as string: composite-page
cnx-easybake DEBUG     first: attr-my-type study-this
cnx-easybake DEBUG IdentToken as string: study-this
cnx-easybake DEBUG     first: container div
cnx-easybake DEBUG     first: content pending(eoc-key-equations)
cnx-easybake DEBUG Rule (4): :pass("first") body::after, :pass("second") body::after 
cnx-easybake DEBUG     first: content "Two passes, doubled!"
cnx-easybake DEBUG Recipe first length: 20
cnx-easybake DEBUG Rule (33): :pass("second") div[data-type="page"]::before, :pass("second") div[data-type="composite-page"]::before 
cnx-easybake DEBUG     second: counter-increment page
cnx-easybake DEBUG     second: container h1
cnx-easybake DEBUG     second: content "Chapter " counter(page)
cnx-easybake DEBUG     second: attr-id "myid" counter(page)
cnx-easybake DEBUG Rule (33): :pass("second") div[data-type="page"]::before, :pass("second") div[data-type="composite-page"]::before 
cnx-easybake DEBUG     second: counter-increment page
cnx-easybake DEBUG     second: container h1
cnx-easybake DEBUG     second: content "Chapter " counter(page)
cnx-easybake DEBUG     second: attr-id "myid" counter(page)
cnx-easybake DEBUG Rule (33): :pass("second") div[data-type="page"]::before, :pass("second") div[data-type="composite-page"]::before 
cnx-easybake DEBUG     second: counter-increment page
cnx-easybake DEBUG     second: container h1
cnx-easybake DEBUG     second: content "Chapter " counter(page)
cnx-easybake DEBUG     second: attr-id "myid" counter(page)
cnx-easybake DEBUG Rule (33): :pass("second") div[data-type="page"]::before, :pass("second") div[data-type="composite-page"]::before 
cnx-easybake DEBUG     second: counter-increment page
cnx-easybake DEBUG     second: container h1
cnx-easybake DEBUG     second: content "Chapter " counter(page)
cnx-easybake DEBUG     second: attr-id "myid" counter(page)
cnx-easybake DEBUG Rule (4): :pass("first") body::after, :pass("second") body::after 
cnx-easybake DEBUG     second: content "Two passes, doubled!"
cnx-easybake DEBUG Rule (8): :pass("second") body::after 
cnx-easybake DEBUG     second: content string(onestring)
cnx-easybake DEBUG IdentToken as string: onestring
cnx-easybake DEBUG Recipe second length: 36
