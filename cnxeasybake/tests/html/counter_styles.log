cnx-easybake DEBUG Passes: ['0', u'2']
cnx-easybake DEBUG Rule (23): body::before 
cnx-easybake DEBUG     0: content "Hint, the food is at item #" target-counter("burger", items)
cnx-easybake DEBUG IdentToken as string: items
cnx-easybake DEBUG     0: container p
cnx-easybake DEBUG     0: move-to b1
cnx-easybake DEBUG Rule (28): body::before 
cnx-easybake DEBUG     0: content "And maybe at #" target-counter("fries", items)
cnx-easybake DEBUG IdentToken as string: items
cnx-easybake DEBUG     0: container p
cnx-easybake DEBUG     0: move-to b2
cnx-easybake DEBUG Rule (33): body::before 
cnx-easybake DEBUG     0: content "And has a title:" target-string(mylist, lname)
cnx-easybake DEBUG IdentToken as string: mylist
cnx-easybake DEBUG IdentToken as string: lname
cnx-easybake DEBUG     0: container p
cnx-easybake DEBUG     0: move-to b3
cnx-easybake DEBUG Rule (1): ul 
cnx-easybake DEBUG     0: counter-reset lights, cardassian-lights, my-lights -1, my-food 0, toobig 6000
cnx-easybake DEBUG     0: string-set lname "This is the food and light list"
cnx-easybake DEBUG Rule (5): li 
cnx-easybake DEBUG     0: counter-increment items
cnx-easybake DEBUG Rule (12): li[data-type="light"] 
cnx-easybake DEBUG     0: counter-increment lights
cnx-easybake DEBUG     0: counter-increment my-lights
cnx-easybake DEBUG Rule (8): li::before 
cnx-easybake DEBUG     0: container span
cnx-easybake DEBUG     0: content counter(items, decimal) "|" counter(items, lower-roman) "|" counter(items, upper-roman) "|" counter(items, lower-alpha) "|" counter(items, upper-alpha) "|" counter(items, decimal-leading-zero)
cnx-easybake DEBUG Rule (5): li 
cnx-easybake DEBUG     0: counter-increment items
cnx-easybake DEBUG Rule (19): li[data-type="food"] 
cnx-easybake DEBUG     0: counter-increment my-food 500
cnx-easybake DEBUG     0: class "food-" target-counter(burger, items)
cnx-easybake DEBUG IdentToken as string: burger
cnx-easybake DEBUG IdentToken as string: items
cnx-easybake DEBUG Rule (8): li::before 
cnx-easybake DEBUG     0: container span
cnx-easybake DEBUG     0: content counter(items, decimal) "|" counter(items, lower-roman) "|" counter(items, upper-roman) "|" counter(items, lower-alpha) "|" counter(items, upper-alpha) "|" counter(items, decimal-leading-zero)
cnx-easybake DEBUG Rule (5): li 
cnx-easybake DEBUG     0: counter-increment items
cnx-easybake DEBUG Rule (12): li[data-type="light"] 
cnx-easybake DEBUG     0: counter-increment lights
cnx-easybake DEBUG     0: counter-increment my-lights
cnx-easybake DEBUG Rule (16): li[data-type="light"]:not(:first-of-type) 
cnx-easybake DEBUG     0: counter-increment cardassian-lights
cnx-easybake DEBUG Rule (8): li::before 
cnx-easybake DEBUG     0: container span
cnx-easybake DEBUG     0: content counter(items, decimal) "|" counter(items, lower-roman) "|" counter(items, upper-roman) "|" counter(items, lower-alpha) "|" counter(items, upper-alpha) "|" counter(items, decimal-leading-zero)
cnx-easybake DEBUG Rule (5): li 
cnx-easybake DEBUG     0: counter-increment items
cnx-easybake DEBUG Rule (12): li[data-type="light"] 
cnx-easybake DEBUG     0: counter-increment lights
cnx-easybake DEBUG     0: counter-increment my-lights
cnx-easybake DEBUG Rule (16): li[data-type="light"]:not(:first-of-type) 
cnx-easybake DEBUG     0: counter-increment cardassian-lights
cnx-easybake DEBUG Rule (8): li::before 
cnx-easybake DEBUG     0: container span
cnx-easybake DEBUG     0: content counter(items, decimal) "|" counter(items, lower-roman) "|" counter(items, upper-roman) "|" counter(items, lower-alpha) "|" counter(items, upper-alpha) "|" counter(items, decimal-leading-zero)
cnx-easybake DEBUG Rule (5): li 
cnx-easybake DEBUG     0: counter-increment items
cnx-easybake DEBUG Rule (12): li[data-type="light"] 
cnx-easybake DEBUG     0: counter-increment lights
cnx-easybake DEBUG     0: counter-increment my-lights
cnx-easybake DEBUG Rule (16): li[data-type="light"]:not(:first-of-type) 
cnx-easybake DEBUG     0: counter-increment cardassian-lights
cnx-easybake DEBUG Rule (8): li::before 
cnx-easybake DEBUG     0: container span
cnx-easybake DEBUG     0: content counter(items, decimal) "|" counter(items, lower-roman) "|" counter(items, upper-roman) "|" counter(items, lower-alpha) "|" counter(items, upper-alpha) "|" counter(items, decimal-leading-zero)
cnx-easybake DEBUG Rule (41): body::after 
cnx-easybake DEBUG     0: content "There are " counter(cardassian-lights) " lights!"
cnx-easybake DEBUG Rule (44): body::after 
cnx-easybake DEBUG     0: content "There are " counter(lights) " lights!"
cnx-easybake DEBUG Rule (47): body::after 
cnx-easybake DEBUG     0: content "There are " counter(my-lights) " lights!"
cnx-easybake DEBUG Rule (50): body::after 
cnx-easybake DEBUG     0: content "There are " counter(my-food) " calories!"
cnx-easybake DEBUG Rule (53): body::after 
cnx-easybake DEBUG     0: content "There are " counter(my-food, upper-roman) " calories!, " counter(lights, upper-latin) ", " counter(cardassian-lights, lower-latin)
cnx-easybake DEBUG Rule (56): body::after 
cnx-easybake DEBUG     0: content counter(toobig, decimal) "|" counter(toobig, lower-roman) "|" counter(toobig, upper-roman) "|" counter(toobig, lower-alpha) "|" counter(toobig, upper-alpha) "|" counter(toobig, decimal-leading-zero)
cnx-easybake WARNING Number out of range for roman (must be 1..4999)
cnx-easybake WARNING Number out of range for roman (must be 1..4999)
cnx-easybake WARNING Counter out of range for latin (must be 1...26)
cnx-easybake WARNING Counter out of range for latin (must be 1...26)
cnx-easybake DEBUG Recipe 0 length: 139
cnx-easybake WARNING Bad ID target lookup urger
cnx-easybake WARNING Bad ID target lookup ries
cnx-easybake WARNING Bad ID target lookup ylist
cnx-easybake WARNING Bad ID target lookup urger
cnx-easybake DEBUG Rule (38): body:pass(2) 
cnx-easybake DEBUG     2: content pending(b1) pending(b2) pending(b3) content()
cnx-easybake DEBUG Recipe 2 length: 6
